/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JFrameListarUsuarios.java
 *
 * Created on 30-nov-2011, 13:52:31
 */
package Vista.Nivel1;

import Modelo.GestorUsuarios;
import Modelo.Usuario;
import Vista.Modelos.GestionarModelo;
import java.util.ArrayList;
import java.util.Collection;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nunhez82
 */
public class VistaGListadoUsuarios extends javax.swing.JFrame implements GestionarModelo {

    UsuariosTableModel usuariosTableModel;

    /** Creates new form JFrameListarUsuarios */
    public VistaGListadoUsuarios() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButtonAceptar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsuarios = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Listado de usuarios");

        jLabel1.setText("LISTADO DE USUARIOS");

        jButtonAceptar.setText("Aceptar");
        jButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarActionPerformed(evt);
            }
        });

        jTableUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableUsuarios);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 924, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(474, Short.MAX_VALUE)
                .addComponent(jButtonAceptar)
                .addGap(407, 407, 407))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jButtonAceptar)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButtonAceptarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaGListadoUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaGListadoUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaGListadoUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaGListadoUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new VistaGListadoUsuarios().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAceptar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUsuarios;
    // End of variables declaration//GEN-END:variables

    @Override
    public void fijarModelo(Object object) {


        //assert (object.getClass().getName().endsWith(".Catalogo")) : "fijarModelo: clase suminastrada invalida";

        usuariosTableModel = new UsuariosTableModel((GestorUsuarios) object);
        jTableUsuarios.setModel(usuariosTableModel);
        jTableUsuarios.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);

    }

    @Override
    public UsuariosTableModel obtenerModelo() {
        return usuariosTableModel;
    }

    @Override
    public void limpiarModelo() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void setEditable(boolean esEditable) {
       usuariosTableModel.setEditable(esEditable);


    }

    @Override
    public void setModo(String modo) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    class UsuariosTableModel extends DefaultTableModel {

        GestorUsuarios gestorUsuarios;
        boolean editable = true;
        Object[] encabezado = {"Dni", "Nombre", "Apellido 1", "Apellido 2"};
        //private Collection<Titulo> titulos;
        private ArrayList<Usuario> listaUsuarios = new ArrayList<Usuario>();

        public UsuariosTableModel(GestorUsuarios gestorUsuarios) {
            super();
            this.gestorUsuarios = gestorUsuarios;
            Collection<Usuario> usuarios = gestorUsuarios.getMapa().values();
            Object data[][] = new Object[usuarios.size()][encabezado.length];

            int i = 0;
            for (Usuario usuario : usuarios) {
                int j = 0;
                // Extraemos los apellidos
                data[i][j++] = usuario.getDni();
                data[i][j++] = usuario.getNombre();
                data[i][j++] = usuario.getApellido1();
                data[i][j++] = usuario.getApellido2();

                listaUsuarios.add(usuario);
                i++;
            }
            setDataVector(data, encabezado);
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            if (!editable) {
                return false;
            } else {
                return super.isCellEditable(rowIndex, columnIndex);
            }
        }

        public void addUsuario(Usuario usuario) {
            //titulos.add(usuario);
            listaUsuarios.add(usuario);
        }

        public Usuario getUsuario(int pos) {
            return listaUsuarios.get(pos);
        }

        public boolean isEditable() {
            return editable;
        }

        public void setEditable(boolean editable) {
            System.out.println("editable:" + editable);
            this.editable = editable;
        }
    }
}